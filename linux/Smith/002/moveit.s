.global _start

_start:
	MOV	X2, #0x6E3A
	MOVK	X2, #0x4F5D, LSL #16
	MOVK	X2, #0xFEDC, LSL #32
	MOVK	X2, #0x1234, LSL #48

// MOVE W2 into W1
	MOV	W1, W2

// Shifts of MOV
	MOV	X1, X2, LSL #1	// LOG SHIFT LEFT
	MOV	X1, X2, LSR #1	// LOG SHIFT RIGHT
	MOV	X1, X2, ASR #1 	// ARITH SHIFT RIGHT
	MOV	X1, X2, ROR #1	// ROTATE RIGHT

// SAME AS ABOVE WITH MNEMONICS
	LSL	X1, X2, #1	// LOG SHIFT LEFT
	LSR	X1, X2, #1	// LOGICAL SHIFT RIGHT
	ASR	X1, X2, #1	// ARITH SHIFT RIGHT
	ROR	X1, X2, #1	// ROTATE RIGHT

// 8 BIT IMMEDIATE AND SHIFT
	MOV	X1, #0xAB000000	// TOO BIG FOR #IMM16

// MOVN	
	MOV	W1, #45

// MOV THAT WILL TURN TO MOVN
	MOV	W1, #0xFFFFFFFE // -2

// SET UP EXIT AND CALL LINUX
	MOV	X0, #0 // RETURN CODE ZERO
	MOV	X8, #93	// SERV COMMAND CODE 93
	SVC	0	// TERMINATE
